
DISPLAY.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000b5e  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000c2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000036  00800100  00800100  00000b5e  2**0
                  ALLOC
  3 .comment      0000005b  00000000  00000000  00000b5e  2**0
                  CONTENTS, READONLY
  4 .stack.descriptors.hdr 00000070  00000000  00000000  00000bb9  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00000c29  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000118b  00000000  00000000  00000cb9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000895  00000000  00000000  00001e44  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000647  00000000  00000000  000026d9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000f8  00000000  00000000  00002d20  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000208  00000000  00000000  00002e18  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002c3  00000000  00000000  00003020  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  000032e3  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .text         00000004  00000ac6  00000ac6  00000b5a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003344  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .text.Keypad_Init 0000004a  0000091c  0000091c  000009b0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.Keypad_Read 000000f4  000006a6  000006a6  0000073a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .progmemx.data.key_table 00000010  000000ff  000000ff  00000193  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 18 .progmemx.data 0000003d  000000c2  000000c2  00000156  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 19 .text.main    0000014e  00000558  00000558  000005ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .bss.buffer   00000014  00800136  00800136  00000b5e  2**0
                  ALLOC
 21 .text.UART_Config 0000004e  000008ce  000008ce  00000962  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.UART_Transmit 0000000e  00000aaa  00000aaa  00000b3e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.UART_SendData 00000028  00000a82  00000a82  00000b16  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.avrlibc 00000032  00000a50  00000a50  00000ae4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.avrlibc 0000000e  00000ab8  00000ab8  00000b4c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.avrlibc 00000046  00000966  00000966  000009fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.avrlibc 00000448  00000110  00000110  000001a4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.avrlibc 00000036  000009e4  000009e4  00000a78  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.avrlibc 00000078  00000856  00000856  000008ea  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.avrlibc 000000bc  0000079a  0000079a  0000082e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.libgcc.prologue 00000038  000009ac  000009ac  00000a40  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.libgcc.prologue 00000036  00000a1a  00000a1a  00000aae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 37 00 	jmp	0x6e	; 0x6e <__ctors_end>
   4:	0c 94 63 05 	jmp	0xac6	; 0xac6 <__bad_interrupt>
   8:	0c 94 63 05 	jmp	0xac6	; 0xac6 <__bad_interrupt>
   c:	0c 94 63 05 	jmp	0xac6	; 0xac6 <__bad_interrupt>
  10:	0c 94 63 05 	jmp	0xac6	; 0xac6 <__bad_interrupt>
  14:	0c 94 63 05 	jmp	0xac6	; 0xac6 <__bad_interrupt>
  18:	0c 94 63 05 	jmp	0xac6	; 0xac6 <__bad_interrupt>
  1c:	0c 94 63 05 	jmp	0xac6	; 0xac6 <__bad_interrupt>
  20:	0c 94 63 05 	jmp	0xac6	; 0xac6 <__bad_interrupt>
  24:	0c 94 63 05 	jmp	0xac6	; 0xac6 <__bad_interrupt>
  28:	0c 94 63 05 	jmp	0xac6	; 0xac6 <__bad_interrupt>
  2c:	0c 94 63 05 	jmp	0xac6	; 0xac6 <__bad_interrupt>
  30:	0c 94 63 05 	jmp	0xac6	; 0xac6 <__bad_interrupt>
  34:	0c 94 63 05 	jmp	0xac6	; 0xac6 <__bad_interrupt>
  38:	0c 94 63 05 	jmp	0xac6	; 0xac6 <__bad_interrupt>
  3c:	0c 94 63 05 	jmp	0xac6	; 0xac6 <__bad_interrupt>
  40:	0c 94 63 05 	jmp	0xac6	; 0xac6 <__bad_interrupt>
  44:	0c 94 63 05 	jmp	0xac6	; 0xac6 <__bad_interrupt>
  48:	0c 94 63 05 	jmp	0xac6	; 0xac6 <__bad_interrupt>
  4c:	0c 94 63 05 	jmp	0xac6	; 0xac6 <__bad_interrupt>
  50:	0c 94 63 05 	jmp	0xac6	; 0xac6 <__bad_interrupt>
  54:	0c 94 63 05 	jmp	0xac6	; 0xac6 <__bad_interrupt>
  58:	0c 94 63 05 	jmp	0xac6	; 0xac6 <__bad_interrupt>
  5c:	0c 94 63 05 	jmp	0xac6	; 0xac6 <__bad_interrupt>
  60:	0c 94 63 05 	jmp	0xac6	; 0xac6 <__bad_interrupt>
  64:	0c 94 63 05 	jmp	0xac6	; 0xac6 <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	01 4a       	sbci	r16, 0xA1	; 161
  6c:	80 00       	.word	0x0080	; ????

0000006e <__ctors_end>:
  6e:	11 24       	eor	r1, r1
  70:	1f be       	out	0x3f, r1	; 63
  72:	cf ef       	ldi	r28, 0xFF	; 255
  74:	d8 e0       	ldi	r29, 0x08	; 8
  76:	de bf       	out	0x3e, r29	; 62
  78:	cd bf       	out	0x3d, r28	; 61

0000007a <__do_copy_data>:
  7a:	e8 e6       	ldi	r30, 0x68	; 104
  7c:	f0 e0       	ldi	r31, 0x00	; 0
  7e:	40 e0       	ldi	r20, 0x00	; 0
  80:	17 c0       	rjmp	.+46     	; 0xb0 <__do_clear_bss+0x8>
  82:	b5 91       	lpm	r27, Z+
  84:	a5 91       	lpm	r26, Z+
  86:	35 91       	lpm	r19, Z+
  88:	25 91       	lpm	r18, Z+
  8a:	05 91       	lpm	r16, Z+
  8c:	07 fd       	sbrc	r16, 7
  8e:	0c c0       	rjmp	.+24     	; 0xa8 <__do_clear_bss>
  90:	95 91       	lpm	r25, Z+
  92:	85 91       	lpm	r24, Z+
  94:	ef 01       	movw	r28, r30
  96:	f9 2f       	mov	r31, r25
  98:	e8 2f       	mov	r30, r24
  9a:	05 90       	lpm	r0, Z+
  9c:	0d 92       	st	X+, r0
  9e:	a2 17       	cp	r26, r18
  a0:	b3 07       	cpc	r27, r19
  a2:	d9 f7       	brne	.-10     	; 0x9a <__do_copy_data+0x20>
  a4:	fe 01       	movw	r30, r28
  a6:	04 c0       	rjmp	.+8      	; 0xb0 <__do_clear_bss+0x8>

000000a8 <__do_clear_bss>:
  a8:	1d 92       	st	X+, r1
  aa:	a2 17       	cp	r26, r18
  ac:	b3 07       	cpc	r27, r19
  ae:	e1 f7       	brne	.-8      	; 0xa8 <__do_clear_bss>
  b0:	ed 36       	cpi	r30, 0x6D	; 109
  b2:	f4 07       	cpc	r31, r20
  b4:	31 f7       	brne	.-52     	; 0x82 <__do_copy_data+0x8>
  b6:	0e 94 ac 02 	call	0x558	; 0x558 <main>
  ba:	0c 94 5f 00 	jmp	0xbe	; 0xbe <_exit>

000000be <_exit>:
  be:	f8 94       	cli

000000c0 <__stop_program>:
  c0:	ff cf       	rjmp	.-2      	; 0xc0 <__stop_program>

Disassembly of section .text:

00000ac6 <__bad_interrupt>:
 ac6:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.Keypad_Init:

0000091c <Keypad_Init>:
  * @brief configura los pines usados
  */

void Keypad_Init(void){
	//configuramos los pines de salida
	OUTPUT_PIN(R1);
 91c:	8a b1       	in	r24, 0x0a	; 10
 91e:	84 60       	ori	r24, 0x04	; 4
 920:	8a b9       	out	0x0a, r24	; 10
	OUTPUT_PIN(R2);
 922:	8a b1       	in	r24, 0x0a	; 10
 924:	88 60       	ori	r24, 0x08	; 8
 926:	8a b9       	out	0x0a, r24	; 10
	OUTPUT_PIN(R3);
 928:	8a b1       	in	r24, 0x0a	; 10
 92a:	80 61       	ori	r24, 0x10	; 16
 92c:	8a b9       	out	0x0a, r24	; 10
	OUTPUT_PIN(R4);
 92e:	8a b1       	in	r24, 0x0a	; 10
 930:	80 62       	ori	r24, 0x20	; 32
 932:	8a b9       	out	0x0a, r24	; 10
	//configuramos los pines como entrada
	INPUT_PIN(C1);
 934:	8a b1       	in	r24, 0x0a	; 10
 936:	8f 7b       	andi	r24, 0xBF	; 191
 938:	8a b9       	out	0x0a, r24	; 10
 93a:	8b b1       	in	r24, 0x0b	; 11
 93c:	80 64       	ori	r24, 0x40	; 64
 93e:	8b b9       	out	0x0b, r24	; 11
	INPUT_PIN(C2);
 940:	8a b1       	in	r24, 0x0a	; 10
 942:	8f 77       	andi	r24, 0x7F	; 127
 944:	8a b9       	out	0x0a, r24	; 10
 946:	8b b1       	in	r24, 0x0b	; 11
 948:	80 68       	ori	r24, 0x80	; 128
 94a:	8b b9       	out	0x0b, r24	; 11
	INPUT_PIN(C3);
 94c:	84 b1       	in	r24, 0x04	; 4
 94e:	8e 7f       	andi	r24, 0xFE	; 254
 950:	84 b9       	out	0x04, r24	; 4
 952:	85 b1       	in	r24, 0x05	; 5
 954:	81 60       	ori	r24, 0x01	; 1
 956:	85 b9       	out	0x05, r24	; 5
	INPUT_PIN(C4);
 958:	84 b1       	in	r24, 0x04	; 4
 95a:	8d 7f       	andi	r24, 0xFD	; 253
 95c:	84 b9       	out	0x04, r24	; 4
 95e:	85 b1       	in	r24, 0x05	; 5
 960:	82 60       	ori	r24, 0x02	; 2
 962:	85 b9       	out	0x05, r24	; 5
 964:	08 95       	ret

Disassembly of section .text.Keypad_Read:

000006a6 <Keypad_Read>:
  * @brief configura los pines usados
  */

uint8_t Keypad_Read(void){
	uint8_t row;
	int8_t col = 0;
 6a6:	30 e0       	ldi	r19, 0x00	; 0
	uint8_t data;
	for(row = 0; row<4; row++){
 6a8:	20 e0       	ldi	r18, 0x00	; 0
 6aa:	5d c0       	rjmp	.+186    	; 0x766 <Keypad_Read+0xc0>
		R1_SET;
 6ac:	8b b1       	in	r24, 0x0b	; 11
 6ae:	84 60       	ori	r24, 0x04	; 4
 6b0:	8b b9       	out	0x0b, r24	; 11
		R2_SET;
 6b2:	8b b1       	in	r24, 0x0b	; 11
 6b4:	88 60       	ori	r24, 0x08	; 8
 6b6:	8b b9       	out	0x0b, r24	; 11
		R3_SET;
 6b8:	8b b1       	in	r24, 0x0b	; 11
 6ba:	80 61       	ori	r24, 0x10	; 16
 6bc:	8b b9       	out	0x0b, r24	; 11
		R4_SET;
 6be:	8b b1       	in	r24, 0x0b	; 11
 6c0:	80 62       	ori	r24, 0x20	; 32
 6c2:	8b b9       	out	0x0b, r24	; 11
		switch(row){
 6c4:	21 30       	cpi	r18, 0x01	; 1
 6c6:	51 f0       	breq	.+20     	; 0x6dc <Keypad_Read+0x36>
 6c8:	28 f0       	brcs	.+10     	; 0x6d4 <Keypad_Read+0x2e>
 6ca:	22 30       	cpi	r18, 0x02	; 2
 6cc:	59 f0       	breq	.+22     	; 0x6e4 <Keypad_Read+0x3e>
 6ce:	23 30       	cpi	r18, 0x03	; 3
 6d0:	69 f0       	breq	.+26     	; 0x6ec <Keypad_Read+0x46>
 6d2:	0f c0       	rjmp	.+30     	; 0x6f2 <Keypad_Read+0x4c>
			case 0: R1_RESET; break;
 6d4:	8b b1       	in	r24, 0x0b	; 11
 6d6:	8b 7f       	andi	r24, 0xFB	; 251
 6d8:	8b b9       	out	0x0b, r24	; 11
 6da:	0b c0       	rjmp	.+22     	; 0x6f2 <Keypad_Read+0x4c>
			case 1: R2_RESET; break;
 6dc:	8b b1       	in	r24, 0x0b	; 11
 6de:	87 7f       	andi	r24, 0xF7	; 247
 6e0:	8b b9       	out	0x0b, r24	; 11
 6e2:	07 c0       	rjmp	.+14     	; 0x6f2 <Keypad_Read+0x4c>
			case 2: R3_RESET; break;
 6e4:	8b b1       	in	r24, 0x0b	; 11
 6e6:	8f 7e       	andi	r24, 0xEF	; 239
 6e8:	8b b9       	out	0x0b, r24	; 11
 6ea:	03 c0       	rjmp	.+6      	; 0x6f2 <Keypad_Read+0x4c>
			case 3: R4_RESET; break;
 6ec:	8b b1       	in	r24, 0x0b	; 11
 6ee:	8f 7d       	andi	r24, 0xDF	; 223
 6f0:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 6f2:	8f ec       	ldi	r24, 0xCF	; 207
 6f4:	97 e0       	ldi	r25, 0x07	; 7
 6f6:	01 97       	sbiw	r24, 0x01	; 1
 6f8:	f1 f7       	brne	.-4      	; 0x6f6 <Keypad_Read+0x50>
 6fa:	00 c0       	rjmp	.+0      	; 0x6fc <Keypad_Read+0x56>
 6fc:	00 00       	nop
		}
		_delay_us(500);
		data = (uint8_t)(C4_BIT<<3 | C3_BIT<<2 | C2_BIT<<1 | C1_BIT<<0);
 6fe:	83 b1       	in	r24, 0x03	; 3
 700:	81 fb       	bst	r24, 1
 702:	66 27       	eor	r22, r22
 704:	60 f9       	bld	r22, 0
 706:	70 e0       	ldi	r23, 0x00	; 0
 708:	db 01       	movw	r26, r22
 70a:	aa 0f       	add	r26, r26
 70c:	bb 1f       	adc	r27, r27
 70e:	aa 0f       	add	r26, r26
 710:	bb 1f       	adc	r27, r27
 712:	aa 0f       	add	r26, r26
 714:	bb 1f       	adc	r27, r27
 716:	83 b1       	in	r24, 0x03	; 3
 718:	e8 2f       	mov	r30, r24
 71a:	e1 70       	andi	r30, 0x01	; 1
 71c:	f0 e0       	ldi	r31, 0x00	; 0
 71e:	af 01       	movw	r20, r30
 720:	44 0f       	add	r20, r20
 722:	55 1f       	adc	r21, r21
 724:	44 0f       	add	r20, r20
 726:	55 1f       	adc	r21, r21
 728:	99 b1       	in	r25, 0x09	; 9
 72a:	99 1f       	adc	r25, r25
 72c:	99 27       	eor	r25, r25
 72e:	99 1f       	adc	r25, r25
 730:	89 2f       	mov	r24, r25
 732:	90 e0       	ldi	r25, 0x00	; 0
 734:	88 0f       	add	r24, r24
 736:	99 1f       	adc	r25, r25
 738:	99 b1       	in	r25, 0x09	; 9
 73a:	4a 2b       	or	r20, r26
 73c:	84 2b       	or	r24, r20
 73e:	96 fb       	bst	r25, 6
 740:	99 27       	eor	r25, r25
 742:	90 f9       	bld	r25, 0
 744:	89 2b       	or	r24, r25
		col = KEYPAD_EMPTY;
		switch(data){
 746:	8b 30       	cpi	r24, 0x0B	; 11
 748:	31 f0       	breq	.+12     	; 0x756 <Keypad_Read+0xb0>
 74a:	8d 30       	cpi	r24, 0x0D	; 13
 74c:	41 f0       	breq	.+16     	; 0x75e <Keypad_Read+0xb8>
 74e:	87 30       	cpi	r24, 0x07	; 7
 750:	21 f0       	breq	.+8      	; 0x75a <Keypad_Read+0xb4>
			case 2: R3_RESET; break;
			case 3: R4_RESET; break;
		}
		_delay_us(500);
		data = (uint8_t)(C4_BIT<<3 | C3_BIT<<2 | C2_BIT<<1 | C1_BIT<<0);
		col = KEYPAD_EMPTY;
 752:	30 e0       	ldi	r19, 0x00	; 0
 754:	05 c0       	rjmp	.+10     	; 0x760 <Keypad_Read+0xba>
		switch(data){
			case 0xE: col = 0; break;
			case 0xD: col = 1; break;
			case 0xB: col = 2; break;
 756:	32 e0       	ldi	r19, 0x02	; 2
 758:	03 c0       	rjmp	.+6      	; 0x760 <Keypad_Read+0xba>
			case 0x7: col = 3; break;
 75a:	33 e0       	ldi	r19, 0x03	; 3
 75c:	01 c0       	rjmp	.+2      	; 0x760 <Keypad_Read+0xba>
		_delay_us(500);
		data = (uint8_t)(C4_BIT<<3 | C3_BIT<<2 | C2_BIT<<1 | C1_BIT<<0);
		col = KEYPAD_EMPTY;
		switch(data){
			case 0xE: col = 0; break;
			case 0xD: col = 1; break;
 75e:	31 e0       	ldi	r19, 0x01	; 1
			case 0xB: col = 2; break;
			case 0x7: col = 3; break;
		}
		if(col != KEYPAD_EMPTY)
 760:	31 11       	cpse	r19, r1
 762:	04 c0       	rjmp	.+8      	; 0x76c <Keypad_Read+0xc6>

uint8_t Keypad_Read(void){
	uint8_t row;
	int8_t col = 0;
	uint8_t data;
	for(row = 0; row<4; row++){
 764:	2f 5f       	subi	r18, 0xFF	; 255
 766:	24 30       	cpi	r18, 0x04	; 4
 768:	08 f4       	brcc	.+2      	; 0x76c <Keypad_Read+0xc6>
 76a:	a0 cf       	rjmp	.-192    	; 0x6ac <Keypad_Read+0x6>
			case 0x7: col = 3; break;
		}
		if(col != KEYPAD_EMPTY)
		break;      //salida del for
	}
	if(col == KEYPAD_EMPTY)
 76c:	33 23       	and	r19, r19
 76e:	99 f0       	breq	.+38     	; 0x796 <Keypad_Read+0xf0>
		return KEYPAD_EMPTY;
	else
		return(key_table[row][col]);
 770:	82 2f       	mov	r24, r18
 772:	90 e0       	ldi	r25, 0x00	; 0
 774:	88 0f       	add	r24, r24
 776:	99 1f       	adc	r25, r25
 778:	88 0f       	add	r24, r24
 77a:	99 1f       	adc	r25, r25
 77c:	83 0f       	add	r24, r19
 77e:	91 1d       	adc	r25, r1
 780:	09 2e       	mov	r0, r25
 782:	00 0c       	add	r0, r0
 784:	aa 0b       	sbc	r26, r26
 786:	81 50       	subi	r24, 0x01	; 1
 788:	9f 4f       	sbci	r25, 0xFF	; 255
 78a:	af 4f       	sbci	r26, 0xFF	; 255
 78c:	fc 01       	movw	r30, r24
 78e:	84 91       	lpm	r24, Z
 790:	a7 fd       	sbrc	r26, 7
 792:	80 81       	ld	r24, Z
 794:	08 95       	ret
		}
		if(col != KEYPAD_EMPTY)
		break;      //salida del for
	}
	if(col == KEYPAD_EMPTY)
		return KEYPAD_EMPTY;
 796:	80 e0       	ldi	r24, 0x00	; 0
	else
		return(key_table[row][col]);
 798:	08 95       	ret

Disassembly of section .text.main:

00000558 <main>:
void DisplaySet(uint8_t num, NumDisplay display);

int main(void)
{
	/*uart init*/
	UART_Config(DOUBLE_SPEED,9600);
 558:	40 e8       	ldi	r20, 0x80	; 128
 55a:	55 e2       	ldi	r21, 0x25	; 37
 55c:	60 e0       	ldi	r22, 0x00	; 0
 55e:	70 e0       	ldi	r23, 0x00	; 0
 560:	81 e0       	ldi	r24, 0x01	; 1
 562:	0e 94 67 04 	call	0x8ce	; 0x8ce <UART_Config>
	len = sprintf((char*)bufferTx,"CONFIGURACION UART0\r\n");
 566:	26 e1       	ldi	r18, 0x16	; 22
 568:	30 e0       	ldi	r19, 0x00	; 0
 56a:	42 ec       	ldi	r20, 0xC2	; 194
 56c:	50 e0       	ldi	r21, 0x00	; 0
 56e:	60 e0       	ldi	r22, 0x00	; 0
 570:	82 e0       	ldi	r24, 0x02	; 2
 572:	91 e0       	ldi	r25, 0x01	; 1
 574:	0e 94 28 05 	call	0xa50	; 0xa50 <memcpy>
 578:	85 e1       	ldi	r24, 0x15	; 21
 57a:	90 e0       	ldi	r25, 0x00	; 0
 57c:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <len+0x1>
 580:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <len>
	UART_SendData(bufferTx,len);
 584:	65 e1       	ldi	r22, 0x15	; 21
 586:	70 e0       	ldi	r23, 0x00	; 0
 588:	82 e0       	ldi	r24, 0x02	; 2
 58a:	91 e0       	ldi	r25, 0x01	; 1
 58c:	0e 94 41 05 	call	0xa82	; 0xa82 <UART_SendData>
	/*keypad init*/
	Keypad_Init();
 590:	0e 94 8e 04 	call	0x91c	; 0x91c <Keypad_Init>
	//DisplayInit();
	
    while(1)
    {
        //TODO:: Please write your application code 
		data = Keypad_Read();
 594:	0e 94 53 03 	call	0x6a6	; 0x6a6 <Keypad_Read>
 598:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <data>
			if(data == '3')
				DisplaySet(3,DISPLAY3);
			if(data == '4')
				DisplaySet(4,DISPLAY4);
		}*/
		if(data != KEYPAD_EMPTY){
 59c:	88 23       	and	r24, r24
 59e:	09 f4       	brne	.+2      	; 0x5a2 <main+0x4a>
 5a0:	7b c0       	rjmp	.+246    	; 0x698 <main+0x140>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 5a2:	2f ef       	ldi	r18, 0xFF	; 255
 5a4:	31 ee       	ldi	r19, 0xE1	; 225
 5a6:	84 e0       	ldi	r24, 0x04	; 4
 5a8:	21 50       	subi	r18, 0x01	; 1
 5aa:	30 40       	sbci	r19, 0x00	; 0
 5ac:	80 40       	sbci	r24, 0x00	; 0
 5ae:	e1 f7       	brne	.-8      	; 0x5a8 <main+0x50>
 5b0:	00 c0       	rjmp	.+0      	; 0x5b2 <main+0x5a>
 5b2:	00 00       	nop
			_delay_ms(100);
			len = sprintf((char*)bufferTx,"presionado->%c\r\n",data);
 5b4:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <data>
 5b8:	1f 92       	push	r1
 5ba:	8f 93       	push	r24
 5bc:	88 ed       	ldi	r24, 0xD8	; 216
 5be:	90 e0       	ldi	r25, 0x00	; 0
 5c0:	a0 e0       	ldi	r26, 0x00	; 0
 5c2:	af 93       	push	r26
 5c4:	9f 93       	push	r25
 5c6:	8f 93       	push	r24
 5c8:	82 e0       	ldi	r24, 0x02	; 2
 5ca:	91 e0       	ldi	r25, 0x01	; 1
 5cc:	9f 93       	push	r25
 5ce:	8f 93       	push	r24
 5d0:	0e 94 b3 04 	call	0x966	; 0x966 <sprintf>
 5d4:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <len+0x1>
 5d8:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <len>
			UART_SendData(bufferTx,len);
 5dc:	bc 01       	movw	r22, r24
 5de:	82 e0       	ldi	r24, 0x02	; 2
 5e0:	91 e0       	ldi	r25, 0x01	; 1
 5e2:	0e 94 41 05 	call	0xa82	; 0xa82 <UART_SendData>
			if(data>=48 && data<= 57){
 5e6:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <data>
 5ea:	90 ed       	ldi	r25, 0xD0	; 208
 5ec:	98 0f       	add	r25, r24
 5ee:	2d b7       	in	r18, 0x3d	; 61
 5f0:	3e b7       	in	r19, 0x3e	; 62
 5f2:	29 5f       	subi	r18, 0xF9	; 249
 5f4:	3f 4f       	sbci	r19, 0xFF	; 255
 5f6:	0f b6       	in	r0, 0x3f	; 63
 5f8:	f8 94       	cli
 5fa:	3e bf       	out	0x3e, r19	; 62
 5fc:	0f be       	out	0x3f, r0	; 63
 5fe:	2d bf       	out	0x3d, r18	; 61
 600:	9a 30       	cpi	r25, 0x0A	; 10
 602:	50 f4       	brcc	.+20     	; 0x618 <main+0xc0>
				buffer[i] = data;
 604:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 608:	e9 2f       	mov	r30, r25
 60a:	f0 e0       	ldi	r31, 0x00	; 0
 60c:	ea 5c       	subi	r30, 0xCA	; 202
 60e:	fe 4f       	sbci	r31, 0xFE	; 254
 610:	80 83       	st	Z, r24
				i++;
 612:	9f 5f       	subi	r25, 0xFF	; 255
 614:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <__DATA_REGION_ORIGIN__>
			}
			if(data == 'X'){
 618:	88 35       	cpi	r24, 0x58	; 88
 61a:	f1 f5       	brne	.+124    	; 0x698 <main+0x140>
				
				len = sprintf((char*)bufferTx,"NUMERO INGRESADO->");
 61c:	23 e1       	ldi	r18, 0x13	; 19
 61e:	30 e0       	ldi	r19, 0x00	; 0
 620:	49 ee       	ldi	r20, 0xE9	; 233
 622:	50 e0       	ldi	r21, 0x00	; 0
 624:	60 e0       	ldi	r22, 0x00	; 0
 626:	82 e0       	ldi	r24, 0x02	; 2
 628:	91 e0       	ldi	r25, 0x01	; 1
 62a:	0e 94 28 05 	call	0xa50	; 0xa50 <memcpy>
 62e:	82 e1       	ldi	r24, 0x12	; 18
 630:	90 e0       	ldi	r25, 0x00	; 0
 632:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <len+0x1>
 636:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <len>
				UART_SendData(bufferTx,len);
 63a:	62 e1       	ldi	r22, 0x12	; 18
 63c:	70 e0       	ldi	r23, 0x00	; 0
 63e:	82 e0       	ldi	r24, 0x02	; 2
 640:	91 e0       	ldi	r25, 0x01	; 1
 642:	0e 94 41 05 	call	0xa82	; 0xa82 <UART_SendData>
				UART_SendData(buffer,i-1);
 646:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 64a:	70 e0       	ldi	r23, 0x00	; 0
 64c:	61 50       	subi	r22, 0x01	; 1
 64e:	71 09       	sbc	r23, r1
 650:	86 e3       	ldi	r24, 0x36	; 54
 652:	91 e0       	ldi	r25, 0x01	; 1
 654:	0e 94 41 05 	call	0xa82	; 0xa82 <UART_SendData>
				len = sprintf((char*)bufferTx,"\r\n");
 658:	23 e0       	ldi	r18, 0x03	; 3
 65a:	30 e0       	ldi	r19, 0x00	; 0
 65c:	4c ef       	ldi	r20, 0xFC	; 252
 65e:	50 e0       	ldi	r21, 0x00	; 0
 660:	60 e0       	ldi	r22, 0x00	; 0
 662:	82 e0       	ldi	r24, 0x02	; 2
 664:	91 e0       	ldi	r25, 0x01	; 1
 666:	0e 94 28 05 	call	0xa50	; 0xa50 <memcpy>
 66a:	82 e0       	ldi	r24, 0x02	; 2
 66c:	90 e0       	ldi	r25, 0x00	; 0
 66e:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <len+0x1>
 672:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <len>
				UART_SendData(bufferTx,len);
 676:	62 e0       	ldi	r22, 0x02	; 2
 678:	70 e0       	ldi	r23, 0x00	; 0
 67a:	82 e0       	ldi	r24, 0x02	; 2
 67c:	91 e0       	ldi	r25, 0x01	; 1
 67e:	0e 94 41 05 	call	0xa82	; 0xa82 <UART_SendData>
				memset(buffer,0,i);
 682:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 686:	50 e0       	ldi	r21, 0x00	; 0
 688:	60 e0       	ldi	r22, 0x00	; 0
 68a:	70 e0       	ldi	r23, 0x00	; 0
 68c:	86 e3       	ldi	r24, 0x36	; 54
 68e:	91 e0       	ldi	r25, 0x01	; 1
 690:	0e 94 5c 05 	call	0xab8	; 0xab8 <memset>
				i = 0;
 694:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
 698:	8f e3       	ldi	r24, 0x3F	; 63
 69a:	9c e9       	ldi	r25, 0x9C	; 156
 69c:	01 97       	sbiw	r24, 0x01	; 1
 69e:	f1 f7       	brne	.-4      	; 0x69c <main+0x144>
 6a0:	00 c0       	rjmp	.+0      	; 0x6a2 <main+0x14a>
 6a2:	00 00       	nop
 6a4:	77 cf       	rjmp	.-274    	; 0x594 <main+0x3c>

Disassembly of section .text.UART_Config:

000008ce <UART_Config>:
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) );
	/* Get and return received data from buffer */
	return UDR0;
}
 8ce:	81 30       	cpi	r24, 0x01	; 1
 8d0:	41 f4       	brne	.+16     	; 0x8e2 <UART_Config+0x14>
 8d2:	e0 ec       	ldi	r30, 0xC0	; 192
 8d4:	f0 e0       	ldi	r31, 0x00	; 0
 8d6:	80 81       	ld	r24, Z
 8d8:	82 60       	ori	r24, 0x02	; 2
 8da:	80 83       	st	Z, r24
 8dc:	8f ec       	ldi	r24, 0xCF	; 207
 8de:	90 e0       	ldi	r25, 0x00	; 0
 8e0:	02 c0       	rjmp	.+4      	; 0x8e6 <UART_Config+0x18>
 8e2:	87 e6       	ldi	r24, 0x67	; 103
 8e4:	90 e0       	ldi	r25, 0x00	; 0
 8e6:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 8ea:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
 8ee:	e2 ec       	ldi	r30, 0xC2	; 194
 8f0:	f0 e0       	ldi	r31, 0x00	; 0
 8f2:	80 81       	ld	r24, Z
 8f4:	8b 7f       	andi	r24, 0xFB	; 251
 8f6:	80 83       	st	Z, r24
 8f8:	80 81       	ld	r24, Z
 8fa:	86 60       	ori	r24, 0x06	; 6
 8fc:	80 83       	st	Z, r24
 8fe:	80 81       	ld	r24, Z
 900:	8f 7c       	andi	r24, 0xCF	; 207
 902:	80 83       	st	Z, r24
 904:	80 81       	ld	r24, Z
 906:	87 7f       	andi	r24, 0xF7	; 247
 908:	80 83       	st	Z, r24
 90a:	e1 ec       	ldi	r30, 0xC1	; 193
 90c:	f0 e0       	ldi	r31, 0x00	; 0
 90e:	80 81       	ld	r24, Z
 910:	88 61       	ori	r24, 0x18	; 24
 912:	80 83       	st	Z, r24
 914:	80 81       	ld	r24, Z
 916:	80 68       	ori	r24, 0x80	; 128
 918:	80 83       	st	Z, r24
 91a:	08 95       	ret

Disassembly of section .text.UART_Transmit:

00000aaa <UART_Transmit>:
}

void UART_Transmit(uint8_t data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)));
 aaa:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 aae:	95 ff       	sbrs	r25, 5
 ab0:	fc cf       	rjmp	.-8      	; 0xaaa <UART_Transmit>
	/* Put data into buffer, sends the data */
	UDR0 = data;
 ab2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 ab6:	08 95       	ret

Disassembly of section .text.UART_SendData:

00000a82 <UART_SendData>:
	while ( !(UCSR0A & (1<<RXC0)) );
	/* Get and return received data from buffer */
	return UDR0;
}

void UART_SendData(uint8_t *pData,uint16_t Size){
 a82:	0f 93       	push	r16
 a84:	1f 93       	push	r17
 a86:	cf 93       	push	r28
 a88:	df 93       	push	r29
 a8a:	ec 01       	movw	r28, r24
	while(Size-->0){
 a8c:	04 c0       	rjmp	.+8      	; 0xa96 <UART_SendData+0x14>
		 UART_Transmit(*pData);
 a8e:	89 91       	ld	r24, Y+
 a90:	0e 94 55 05 	call	0xaaa	; 0xaaa <UART_Transmit>
	/* Get and return received data from buffer */
	return UDR0;
}

void UART_SendData(uint8_t *pData,uint16_t Size){
	while(Size-->0){
 a94:	b8 01       	movw	r22, r16
 a96:	8b 01       	movw	r16, r22
 a98:	01 50       	subi	r16, 0x01	; 1
 a9a:	11 09       	sbc	r17, r1
 a9c:	67 2b       	or	r22, r23
 a9e:	b9 f7       	brne	.-18     	; 0xa8e <UART_SendData+0xc>
		 UART_Transmit(*pData);
		 pData++;
	}
	return;
 aa0:	df 91       	pop	r29
 aa2:	cf 91       	pop	r28
 aa4:	1f 91       	pop	r17
 aa6:	0f 91       	pop	r16
 aa8:	08 95       	ret

Disassembly of section .text.avrlibc:

00000a50 <memcpy>:
 a50:	cf 92       	push	r12
 a52:	df 92       	push	r13
 a54:	ef 92       	push	r14
 a56:	dc 01       	movw	r26, r24
 a58:	6a 01       	movw	r12, r20
 a5a:	e6 2e       	mov	r14, r22
 a5c:	28 0f       	add	r18, r24
 a5e:	39 1f       	adc	r19, r25
 a60:	a2 17       	cp	r26, r18
 a62:	b3 07       	cpc	r27, r19
 a64:	51 f0       	breq	.+20     	; 0xa7a <memcpy+0x2a>
 a66:	f6 01       	movw	r30, r12
 a68:	44 91       	lpm	r20, Z
 a6a:	e7 fc       	sbrc	r14, 7
 a6c:	40 81       	ld	r20, Z
 a6e:	4d 93       	st	X+, r20
 a70:	4f ef       	ldi	r20, 0xFF	; 255
 a72:	c4 1a       	sub	r12, r20
 a74:	d4 0a       	sbc	r13, r20
 a76:	e4 0a       	sbc	r14, r20
 a78:	f3 cf       	rjmp	.-26     	; 0xa60 <memcpy+0x10>
 a7a:	ef 90       	pop	r14
 a7c:	df 90       	pop	r13
 a7e:	cf 90       	pop	r12
 a80:	08 95       	ret

Disassembly of section .text.avrlibc:

00000ab8 <memset>:
 ab8:	dc 01       	movw	r26, r24
 aba:	01 c0       	rjmp	.+2      	; 0xabe <memset+0x6>
 abc:	6d 93       	st	X+, r22
 abe:	41 50       	subi	r20, 0x01	; 1
 ac0:	50 40       	sbci	r21, 0x00	; 0
 ac2:	e0 f7       	brcc	.-8      	; 0xabc <memset+0x4>
 ac4:	08 95       	ret

Disassembly of section .text.avrlibc:

00000966 <sprintf>:
 966:	af e0       	ldi	r26, 0x0F	; 15
 968:	b0 e0       	ldi	r27, 0x00	; 0
 96a:	e9 eb       	ldi	r30, 0xB9	; 185
 96c:	f4 e0       	ldi	r31, 0x04	; 4
 96e:	0c 94 e4 04 	jmp	0x9c8	; 0x9c8 <__prologue_saves__+0x1c>
 972:	0e 89       	ldd	r16, Y+22	; 0x16
 974:	1f 89       	ldd	r17, Y+23	; 0x17
 976:	86 e0       	ldi	r24, 0x06	; 6
 978:	8d 83       	std	Y+5, r24	; 0x05
 97a:	1a 83       	std	Y+2, r17	; 0x02
 97c:	09 83       	std	Y+1, r16	; 0x01
 97e:	8f ef       	ldi	r24, 0xFF	; 255
 980:	9f e7       	ldi	r25, 0x7F	; 127
 982:	9f 83       	std	Y+7, r25	; 0x07
 984:	8e 83       	std	Y+6, r24	; 0x06
 986:	9e 01       	movw	r18, r28
 988:	25 5e       	subi	r18, 0xE5	; 229
 98a:	3f 4f       	sbci	r19, 0xFF	; 255
 98c:	48 8d       	ldd	r20, Y+24	; 0x18
 98e:	59 8d       	ldd	r21, Y+25	; 0x19
 990:	6a 8d       	ldd	r22, Y+26	; 0x1a
 992:	ce 01       	movw	r24, r28
 994:	01 96       	adiw	r24, 0x01	; 1
 996:	0e 94 88 00 	call	0x110	; 0x110 <vfprintf>
 99a:	e8 85       	ldd	r30, Y+8	; 0x08
 99c:	f9 85       	ldd	r31, Y+9	; 0x09
 99e:	e0 0f       	add	r30, r16
 9a0:	f1 1f       	adc	r31, r17
 9a2:	10 82       	st	Z, r1
 9a4:	2f 96       	adiw	r28, 0x0f	; 15
 9a6:	e4 e0       	ldi	r30, 0x04	; 4
 9a8:	0c 94 1b 05 	jmp	0xa36	; 0xa36 <__epilogue_restores__+0x1c>

Disassembly of section .text.avrlibc:

00000110 <vfprintf>:
 110:	2f 92       	push	r2
 112:	3f 92       	push	r3
 114:	4f 92       	push	r4
 116:	6f 92       	push	r6
 118:	7f 92       	push	r7
 11a:	8f 92       	push	r8
 11c:	9f 92       	push	r9
 11e:	af 92       	push	r10
 120:	bf 92       	push	r11
 122:	cf 92       	push	r12
 124:	df 92       	push	r13
 126:	ef 92       	push	r14
 128:	ff 92       	push	r15
 12a:	0f 93       	push	r16
 12c:	1f 93       	push	r17
 12e:	cf 93       	push	r28
 130:	df 93       	push	r29
 132:	cd b7       	in	r28, 0x3d	; 61
 134:	de b7       	in	r29, 0x3e	; 62
 136:	62 97       	sbiw	r28, 0x12	; 18
 138:	0f b6       	in	r0, 0x3f	; 63
 13a:	f8 94       	cli
 13c:	de bf       	out	0x3e, r29	; 62
 13e:	0f be       	out	0x3f, r0	; 63
 140:	cd bf       	out	0x3d, r28	; 61
 142:	6c 01       	movw	r12, r24
 144:	3a 01       	movw	r6, r20
 146:	86 2e       	mov	r8, r22
 148:	79 01       	movw	r14, r18
 14a:	fc 01       	movw	r30, r24
 14c:	10 86       	std	Z+8, r1	; 0x08
 14e:	17 82       	std	Z+7, r1	; 0x07
 150:	84 81       	ldd	r24, Z+4	; 0x04
 152:	81 ff       	sbrs	r24, 1
 154:	e7 c1       	rjmp	.+974    	; 0x524 <__EEPROM_REGION_LENGTH__+0x124>
 156:	9e 01       	movw	r18, r28
 158:	2f 5f       	subi	r18, 0xFF	; 255
 15a:	3f 4f       	sbci	r19, 0xFF	; 255
 15c:	3d 87       	std	Y+13, r19	; 0x0d
 15e:	2c 87       	std	Y+12, r18	; 0x0c
 160:	c9 01       	movw	r24, r18
 162:	a0 e8       	ldi	r26, 0x80	; 128
 164:	88 8b       	std	Y+16, r24	; 0x10
 166:	99 8b       	std	Y+17, r25	; 0x11
 168:	aa 8b       	std	Y+18, r26	; 0x12
 16a:	9f e3       	ldi	r25, 0x3F	; 63
 16c:	99 2e       	mov	r9, r25
 16e:	f3 01       	movw	r30, r6
 170:	84 91       	lpm	r24, Z
 172:	87 fc       	sbrc	r8, 7
 174:	80 81       	ld	r24, Z
 176:	88 23       	and	r24, r24
 178:	09 f4       	brne	.+2      	; 0x17c <vfprintf+0x6c>
 17a:	d0 c1       	rjmp	.+928    	; 0x51c <__EEPROM_REGION_LENGTH__+0x11c>
 17c:	48 2d       	mov	r20, r8
 17e:	93 01       	movw	r18, r6
 180:	2f 5f       	subi	r18, 0xFF	; 255
 182:	3f 4f       	sbci	r19, 0xFF	; 255
 184:	4f 4f       	sbci	r20, 0xFF	; 255
 186:	85 32       	cpi	r24, 0x25	; 37
 188:	19 f0       	breq	.+6      	; 0x190 <vfprintf+0x80>
 18a:	39 01       	movw	r6, r18
 18c:	84 2e       	mov	r8, r20
 18e:	0a c0       	rjmp	.+20     	; 0x1a4 <vfprintf+0x94>
 190:	f9 01       	movw	r30, r18
 192:	84 91       	lpm	r24, Z
 194:	47 fd       	sbrc	r20, 7
 196:	80 81       	ld	r24, Z
 198:	92 e0       	ldi	r25, 0x02	; 2
 19a:	69 0e       	add	r6, r25
 19c:	71 1c       	adc	r7, r1
 19e:	81 1c       	adc	r8, r1
 1a0:	85 32       	cpi	r24, 0x25	; 37
 1a2:	29 f4       	brne	.+10     	; 0x1ae <vfprintf+0x9e>
 1a4:	b6 01       	movw	r22, r12
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	0e 94 2b 04 	call	0x856	; 0x856 <fputc>
 1ac:	e0 cf       	rjmp	.-64     	; 0x16e <vfprintf+0x5e>
 1ae:	b1 2c       	mov	r11, r1
 1b0:	00 e0       	ldi	r16, 0x00	; 0
 1b2:	10 e0       	ldi	r17, 0x00	; 0
 1b4:	10 32       	cpi	r17, 0x20	; 32
 1b6:	a0 f4       	brcc	.+40     	; 0x1e0 <vfprintf+0xd0>
 1b8:	8b 32       	cpi	r24, 0x2B	; 43
 1ba:	69 f0       	breq	.+26     	; 0x1d6 <vfprintf+0xc6>
 1bc:	30 f4       	brcc	.+12     	; 0x1ca <vfprintf+0xba>
 1be:	80 32       	cpi	r24, 0x20	; 32
 1c0:	59 f0       	breq	.+22     	; 0x1d8 <vfprintf+0xc8>
 1c2:	83 32       	cpi	r24, 0x23	; 35
 1c4:	69 f4       	brne	.+26     	; 0x1e0 <vfprintf+0xd0>
 1c6:	10 61       	ori	r17, 0x10	; 16
 1c8:	2c c0       	rjmp	.+88     	; 0x222 <vfprintf+0x112>
 1ca:	8d 32       	cpi	r24, 0x2D	; 45
 1cc:	39 f0       	breq	.+14     	; 0x1dc <vfprintf+0xcc>
 1ce:	80 33       	cpi	r24, 0x30	; 48
 1d0:	39 f4       	brne	.+14     	; 0x1e0 <vfprintf+0xd0>
 1d2:	11 60       	ori	r17, 0x01	; 1
 1d4:	26 c0       	rjmp	.+76     	; 0x222 <vfprintf+0x112>
 1d6:	12 60       	ori	r17, 0x02	; 2
 1d8:	14 60       	ori	r17, 0x04	; 4
 1da:	23 c0       	rjmp	.+70     	; 0x222 <vfprintf+0x112>
 1dc:	18 60       	ori	r17, 0x08	; 8
 1de:	21 c0       	rjmp	.+66     	; 0x222 <vfprintf+0x112>
 1e0:	17 fd       	sbrc	r17, 7
 1e2:	29 c0       	rjmp	.+82     	; 0x236 <vfprintf+0x126>
 1e4:	90 ed       	ldi	r25, 0xD0	; 208
 1e6:	98 0f       	add	r25, r24
 1e8:	9a 30       	cpi	r25, 0x0A	; 10
 1ea:	78 f4       	brcc	.+30     	; 0x20a <vfprintf+0xfa>
 1ec:	16 ff       	sbrs	r17, 6
 1ee:	06 c0       	rjmp	.+12     	; 0x1fc <vfprintf+0xec>
 1f0:	aa e0       	ldi	r26, 0x0A	; 10
 1f2:	ba 9e       	mul	r11, r26
 1f4:	90 0d       	add	r25, r0
 1f6:	11 24       	eor	r1, r1
 1f8:	b9 2e       	mov	r11, r25
 1fa:	13 c0       	rjmp	.+38     	; 0x222 <vfprintf+0x112>
 1fc:	ea e0       	ldi	r30, 0x0A	; 10
 1fe:	0e 9f       	mul	r16, r30
 200:	90 0d       	add	r25, r0
 202:	11 24       	eor	r1, r1
 204:	09 2f       	mov	r16, r25
 206:	10 62       	ori	r17, 0x20	; 32
 208:	0c c0       	rjmp	.+24     	; 0x222 <vfprintf+0x112>
 20a:	8e 32       	cpi	r24, 0x2E	; 46
 20c:	21 f4       	brne	.+8      	; 0x216 <vfprintf+0x106>
 20e:	16 fd       	sbrc	r17, 6
 210:	85 c1       	rjmp	.+778    	; 0x51c <__EEPROM_REGION_LENGTH__+0x11c>
 212:	10 64       	ori	r17, 0x40	; 64
 214:	06 c0       	rjmp	.+12     	; 0x222 <vfprintf+0x112>
 216:	8c 36       	cpi	r24, 0x6C	; 108
 218:	11 f4       	brne	.+4      	; 0x21e <vfprintf+0x10e>
 21a:	10 68       	ori	r17, 0x80	; 128
 21c:	02 c0       	rjmp	.+4      	; 0x222 <vfprintf+0x112>
 21e:	88 36       	cpi	r24, 0x68	; 104
 220:	51 f4       	brne	.+20     	; 0x236 <vfprintf+0x126>
 222:	f3 01       	movw	r30, r6
 224:	84 91       	lpm	r24, Z
 226:	87 fc       	sbrc	r8, 7
 228:	80 81       	ld	r24, Z
 22a:	ff ef       	ldi	r31, 0xFF	; 255
 22c:	6f 1a       	sub	r6, r31
 22e:	7f 0a       	sbc	r7, r31
 230:	8f 0a       	sbc	r8, r31
 232:	81 11       	cpse	r24, r1
 234:	bf cf       	rjmp	.-130    	; 0x1b4 <vfprintf+0xa4>
 236:	98 2f       	mov	r25, r24
 238:	9f 7d       	andi	r25, 0xDF	; 223
 23a:	95 54       	subi	r25, 0x45	; 69
 23c:	93 30       	cpi	r25, 0x03	; 3
 23e:	28 f4       	brcc	.+10     	; 0x24a <vfprintf+0x13a>
 240:	24 e0       	ldi	r18, 0x04	; 4
 242:	e2 0e       	add	r14, r18
 244:	f1 1c       	adc	r15, r1
 246:	99 82       	std	Y+1, r9	; 0x01
 248:	0f c0       	rjmp	.+30     	; 0x268 <vfprintf+0x158>
 24a:	83 36       	cpi	r24, 0x63	; 99
 24c:	31 f0       	breq	.+12     	; 0x25a <vfprintf+0x14a>
 24e:	83 37       	cpi	r24, 0x73	; 115
 250:	91 f0       	breq	.+36     	; 0x276 <vfprintf+0x166>
 252:	83 35       	cpi	r24, 0x53	; 83
 254:	09 f0       	breq	.+2      	; 0x258 <vfprintf+0x148>
 256:	63 c0       	rjmp	.+198    	; 0x31e <vfprintf+0x20e>
 258:	27 c0       	rjmp	.+78     	; 0x2a8 <vfprintf+0x198>
 25a:	f7 01       	movw	r30, r14
 25c:	80 81       	ld	r24, Z
 25e:	89 83       	std	Y+1, r24	; 0x01
 260:	97 01       	movw	r18, r14
 262:	2e 5f       	subi	r18, 0xFE	; 254
 264:	3f 4f       	sbci	r19, 0xFF	; 255
 266:	79 01       	movw	r14, r18
 268:	28 88       	ldd	r2, Y+16	; 0x10
 26a:	39 88       	ldd	r3, Y+17	; 0x11
 26c:	4a 88       	ldd	r4, Y+18	; 0x12
 26e:	aa 24       	eor	r10, r10
 270:	a3 94       	inc	r10
 272:	b1 2c       	mov	r11, r1
 274:	17 c0       	rjmp	.+46     	; 0x2a4 <vfprintf+0x194>
 276:	a7 01       	movw	r20, r14
 278:	4d 5f       	subi	r20, 0xFD	; 253
 27a:	5f 4f       	sbci	r21, 0xFF	; 255
 27c:	5f 87       	std	Y+15, r21	; 0x0f
 27e:	4e 87       	std	Y+14, r20	; 0x0e
 280:	f7 01       	movw	r30, r14
 282:	20 80       	ld	r2, Z
 284:	31 80       	ldd	r3, Z+1	; 0x01
 286:	42 80       	ldd	r4, Z+2	; 0x02
 288:	16 ff       	sbrs	r17, 6
 28a:	03 c0       	rjmp	.+6      	; 0x292 <vfprintf+0x182>
 28c:	4b 2d       	mov	r20, r11
 28e:	50 e0       	ldi	r21, 0x00	; 0
 290:	02 c0       	rjmp	.+4      	; 0x296 <vfprintf+0x186>
 292:	4f ef       	ldi	r20, 0xFF	; 255
 294:	5f ef       	ldi	r21, 0xFF	; 255
 296:	84 2d       	mov	r24, r4
 298:	b1 01       	movw	r22, r2
 29a:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <strnlen>
 29e:	5c 01       	movw	r10, r24
 2a0:	ee 84       	ldd	r14, Y+14	; 0x0e
 2a2:	ff 84       	ldd	r15, Y+15	; 0x0f
 2a4:	1f 77       	andi	r17, 0x7F	; 127
 2a6:	18 c0       	rjmp	.+48     	; 0x2d8 <vfprintf+0x1c8>
 2a8:	97 01       	movw	r18, r14
 2aa:	2d 5f       	subi	r18, 0xFD	; 253
 2ac:	3f 4f       	sbci	r19, 0xFF	; 255
 2ae:	3f 87       	std	Y+15, r19	; 0x0f
 2b0:	2e 87       	std	Y+14, r18	; 0x0e
 2b2:	f7 01       	movw	r30, r14
 2b4:	20 80       	ld	r2, Z
 2b6:	31 80       	ldd	r3, Z+1	; 0x01
 2b8:	42 80       	ldd	r4, Z+2	; 0x02
 2ba:	16 ff       	sbrs	r17, 6
 2bc:	03 c0       	rjmp	.+6      	; 0x2c4 <vfprintf+0x1b4>
 2be:	4b 2d       	mov	r20, r11
 2c0:	50 e0       	ldi	r21, 0x00	; 0
 2c2:	02 c0       	rjmp	.+4      	; 0x2c8 <vfprintf+0x1b8>
 2c4:	4f ef       	ldi	r20, 0xFF	; 255
 2c6:	5f ef       	ldi	r21, 0xFF	; 255
 2c8:	84 2d       	mov	r24, r4
 2ca:	b1 01       	movw	r22, r2
 2cc:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <strnlen>
 2d0:	5c 01       	movw	r10, r24
 2d2:	10 68       	ori	r17, 0x80	; 128
 2d4:	ee 84       	ldd	r14, Y+14	; 0x0e
 2d6:	ff 84       	ldd	r15, Y+15	; 0x0f
 2d8:	13 fd       	sbrc	r17, 3
 2da:	1d c0       	rjmp	.+58     	; 0x316 <vfprintf+0x206>
 2dc:	80 2f       	mov	r24, r16
 2de:	90 e0       	ldi	r25, 0x00	; 0
 2e0:	a8 16       	cp	r10, r24
 2e2:	b9 06       	cpc	r11, r25
 2e4:	c0 f4       	brcc	.+48     	; 0x316 <vfprintf+0x206>
 2e6:	b6 01       	movw	r22, r12
 2e8:	80 e2       	ldi	r24, 0x20	; 32
 2ea:	90 e0       	ldi	r25, 0x00	; 0
 2ec:	0e 94 2b 04 	call	0x856	; 0x856 <fputc>
 2f0:	01 50       	subi	r16, 0x01	; 1
 2f2:	f4 cf       	rjmp	.-24     	; 0x2dc <vfprintf+0x1cc>
 2f4:	f1 01       	movw	r30, r2
 2f6:	84 91       	lpm	r24, Z
 2f8:	47 fc       	sbrc	r4, 7
 2fa:	80 81       	ld	r24, Z
 2fc:	ff ef       	ldi	r31, 0xFF	; 255
 2fe:	2f 1a       	sub	r2, r31
 300:	3f 0a       	sbc	r3, r31
 302:	4f 0a       	sbc	r4, r31
 304:	b6 01       	movw	r22, r12
 306:	90 e0       	ldi	r25, 0x00	; 0
 308:	0e 94 2b 04 	call	0x856	; 0x856 <fputc>
 30c:	01 11       	cpse	r16, r1
 30e:	01 50       	subi	r16, 0x01	; 1
 310:	21 e0       	ldi	r18, 0x01	; 1
 312:	a2 1a       	sub	r10, r18
 314:	b1 08       	sbc	r11, r1
 316:	a1 14       	cp	r10, r1
 318:	b1 04       	cpc	r11, r1
 31a:	61 f7       	brne	.-40     	; 0x2f4 <vfprintf+0x1e4>
 31c:	f5 c0       	rjmp	.+490    	; 0x508 <__EEPROM_REGION_LENGTH__+0x108>
 31e:	84 36       	cpi	r24, 0x64	; 100
 320:	11 f0       	breq	.+4      	; 0x326 <vfprintf+0x216>
 322:	89 36       	cpi	r24, 0x69	; 105
 324:	71 f5       	brne	.+92     	; 0x382 <vfprintf+0x272>
 326:	f7 01       	movw	r30, r14
 328:	17 ff       	sbrs	r17, 7
 32a:	08 c0       	rjmp	.+16     	; 0x33c <vfprintf+0x22c>
 32c:	60 81       	ld	r22, Z
 32e:	71 81       	ldd	r23, Z+1	; 0x01
 330:	82 81       	ldd	r24, Z+2	; 0x02
 332:	93 81       	ldd	r25, Z+3	; 0x03
 334:	97 01       	movw	r18, r14
 336:	2c 5f       	subi	r18, 0xFC	; 252
 338:	3f 4f       	sbci	r19, 0xFF	; 255
 33a:	09 c0       	rjmp	.+18     	; 0x34e <vfprintf+0x23e>
 33c:	60 81       	ld	r22, Z
 33e:	71 81       	ldd	r23, Z+1	; 0x01
 340:	07 2e       	mov	r0, r23
 342:	00 0c       	add	r0, r0
 344:	88 0b       	sbc	r24, r24
 346:	99 0b       	sbc	r25, r25
 348:	97 01       	movw	r18, r14
 34a:	2e 5f       	subi	r18, 0xFE	; 254
 34c:	3f 4f       	sbci	r19, 0xFF	; 255
 34e:	79 01       	movw	r14, r18
 350:	1f 76       	andi	r17, 0x6F	; 111
 352:	31 2e       	mov	r3, r17
 354:	97 ff       	sbrs	r25, 7
 356:	0a c0       	rjmp	.+20     	; 0x36c <vfprintf+0x25c>
 358:	90 95       	com	r25
 35a:	80 95       	com	r24
 35c:	70 95       	com	r23
 35e:	61 95       	neg	r22
 360:	7f 4f       	sbci	r23, 0xFF	; 255
 362:	8f 4f       	sbci	r24, 0xFF	; 255
 364:	9f 4f       	sbci	r25, 0xFF	; 255
 366:	31 2f       	mov	r19, r17
 368:	30 68       	ori	r19, 0x80	; 128
 36a:	33 2e       	mov	r3, r19
 36c:	2a e0       	ldi	r18, 0x0A	; 10
 36e:	30 e0       	ldi	r19, 0x00	; 0
 370:	ae 01       	movw	r20, r28
 372:	4f 5f       	subi	r20, 0xFF	; 255
 374:	5f 4f       	sbci	r21, 0xFF	; 255
 376:	0e 94 cd 03 	call	0x79a	; 0x79a <__ultoa_invert>
 37a:	48 2e       	mov	r4, r24
 37c:	4c 85       	ldd	r20, Y+12	; 0x0c
 37e:	44 1a       	sub	r4, r20
 380:	4a c0       	rjmp	.+148    	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 382:	85 37       	cpi	r24, 0x75	; 117
 384:	29 f4       	brne	.+10     	; 0x390 <vfprintf+0x280>
 386:	1f 7e       	andi	r17, 0xEF	; 239
 388:	a1 2e       	mov	r10, r17
 38a:	2a e0       	ldi	r18, 0x0A	; 10
 38c:	30 e0       	ldi	r19, 0x00	; 0
 38e:	25 c0       	rjmp	.+74     	; 0x3da <vfprintf+0x2ca>
 390:	51 2f       	mov	r21, r17
 392:	59 7f       	andi	r21, 0xF9	; 249
 394:	a5 2e       	mov	r10, r21
 396:	8f 36       	cpi	r24, 0x6F	; 111
 398:	c1 f0       	breq	.+48     	; 0x3ca <vfprintf+0x2ba>
 39a:	18 f4       	brcc	.+6      	; 0x3a2 <vfprintf+0x292>
 39c:	88 35       	cpi	r24, 0x58	; 88
 39e:	79 f0       	breq	.+30     	; 0x3be <vfprintf+0x2ae>
 3a0:	bd c0       	rjmp	.+378    	; 0x51c <__EEPROM_REGION_LENGTH__+0x11c>
 3a2:	80 37       	cpi	r24, 0x70	; 112
 3a4:	19 f0       	breq	.+6      	; 0x3ac <vfprintf+0x29c>
 3a6:	88 37       	cpi	r24, 0x78	; 120
 3a8:	21 f0       	breq	.+8      	; 0x3b2 <vfprintf+0x2a2>
 3aa:	b8 c0       	rjmp	.+368    	; 0x51c <__EEPROM_REGION_LENGTH__+0x11c>
 3ac:	85 2f       	mov	r24, r21
 3ae:	80 61       	ori	r24, 0x10	; 16
 3b0:	a8 2e       	mov	r10, r24
 3b2:	a4 fe       	sbrs	r10, 4
 3b4:	0d c0       	rjmp	.+26     	; 0x3d0 <vfprintf+0x2c0>
 3b6:	9a 2d       	mov	r25, r10
 3b8:	94 60       	ori	r25, 0x04	; 4
 3ba:	a9 2e       	mov	r10, r25
 3bc:	09 c0       	rjmp	.+18     	; 0x3d0 <vfprintf+0x2c0>
 3be:	14 ff       	sbrs	r17, 4
 3c0:	0a c0       	rjmp	.+20     	; 0x3d6 <vfprintf+0x2c6>
 3c2:	a5 2f       	mov	r26, r21
 3c4:	a6 60       	ori	r26, 0x06	; 6
 3c6:	aa 2e       	mov	r10, r26
 3c8:	06 c0       	rjmp	.+12     	; 0x3d6 <vfprintf+0x2c6>
 3ca:	28 e0       	ldi	r18, 0x08	; 8
 3cc:	30 e0       	ldi	r19, 0x00	; 0
 3ce:	05 c0       	rjmp	.+10     	; 0x3da <vfprintf+0x2ca>
 3d0:	20 e1       	ldi	r18, 0x10	; 16
 3d2:	30 e0       	ldi	r19, 0x00	; 0
 3d4:	02 c0       	rjmp	.+4      	; 0x3da <vfprintf+0x2ca>
 3d6:	20 e1       	ldi	r18, 0x10	; 16
 3d8:	32 e0       	ldi	r19, 0x02	; 2
 3da:	f7 01       	movw	r30, r14
 3dc:	a7 fe       	sbrs	r10, 7
 3de:	08 c0       	rjmp	.+16     	; 0x3f0 <vfprintf+0x2e0>
 3e0:	60 81       	ld	r22, Z
 3e2:	71 81       	ldd	r23, Z+1	; 0x01
 3e4:	82 81       	ldd	r24, Z+2	; 0x02
 3e6:	93 81       	ldd	r25, Z+3	; 0x03
 3e8:	a7 01       	movw	r20, r14
 3ea:	4c 5f       	subi	r20, 0xFC	; 252
 3ec:	5f 4f       	sbci	r21, 0xFF	; 255
 3ee:	07 c0       	rjmp	.+14     	; 0x3fe <vfprintf+0x2ee>
 3f0:	60 81       	ld	r22, Z
 3f2:	71 81       	ldd	r23, Z+1	; 0x01
 3f4:	80 e0       	ldi	r24, 0x00	; 0
 3f6:	90 e0       	ldi	r25, 0x00	; 0
 3f8:	a7 01       	movw	r20, r14
 3fa:	4e 5f       	subi	r20, 0xFE	; 254
 3fc:	5f 4f       	sbci	r21, 0xFF	; 255
 3fe:	7a 01       	movw	r14, r20
 400:	ae 01       	movw	r20, r28
 402:	4f 5f       	subi	r20, 0xFF	; 255
 404:	5f 4f       	sbci	r21, 0xFF	; 255
 406:	0e 94 cd 03 	call	0x79a	; 0x79a <__ultoa_invert>
 40a:	48 2e       	mov	r4, r24
 40c:	5c 85       	ldd	r21, Y+12	; 0x0c
 40e:	45 1a       	sub	r4, r21
 410:	8a 2d       	mov	r24, r10
 412:	8f 77       	andi	r24, 0x7F	; 127
 414:	38 2e       	mov	r3, r24
 416:	36 fe       	sbrs	r3, 6
 418:	0d c0       	rjmp	.+26     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 41a:	93 2d       	mov	r25, r3
 41c:	9e 7f       	andi	r25, 0xFE	; 254
 41e:	a9 2e       	mov	r10, r25
 420:	4b 14       	cp	r4, r11
 422:	58 f4       	brcc	.+22     	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
 424:	34 fe       	sbrs	r3, 4
 426:	0b c0       	rjmp	.+22     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 428:	32 fc       	sbrc	r3, 2
 42a:	09 c0       	rjmp	.+18     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 42c:	a3 2d       	mov	r26, r3
 42e:	ae 7e       	andi	r26, 0xEE	; 238
 430:	aa 2e       	mov	r10, r26
 432:	05 c0       	rjmp	.+10     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 434:	14 2d       	mov	r17, r4
 436:	a3 2c       	mov	r10, r3
 438:	03 c0       	rjmp	.+6      	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 43a:	14 2d       	mov	r17, r4
 43c:	01 c0       	rjmp	.+2      	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 43e:	1b 2d       	mov	r17, r11
 440:	a4 fe       	sbrs	r10, 4
 442:	0e c0       	rjmp	.+28     	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
 444:	fe 01       	movw	r30, r28
 446:	e4 0d       	add	r30, r4
 448:	f1 1d       	adc	r31, r1
 44a:	80 81       	ld	r24, Z
 44c:	80 33       	cpi	r24, 0x30	; 48
 44e:	21 f4       	brne	.+8      	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
 450:	ea 2d       	mov	r30, r10
 452:	e9 7e       	andi	r30, 0xE9	; 233
 454:	ae 2e       	mov	r10, r30
 456:	08 c0       	rjmp	.+16     	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
 458:	a2 fe       	sbrs	r10, 2
 45a:	05 c0       	rjmp	.+10     	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
 45c:	1e 5f       	subi	r17, 0xFE	; 254
 45e:	04 c0       	rjmp	.+8      	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
 460:	8a 2d       	mov	r24, r10
 462:	86 78       	andi	r24, 0x86	; 134
 464:	09 f0       	breq	.+2      	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
 466:	1f 5f       	subi	r17, 0xFF	; 255
 468:	a3 fc       	sbrc	r10, 3
 46a:	11 c0       	rjmp	.+34     	; 0x48e <__EEPROM_REGION_LENGTH__+0x8e>
 46c:	a0 fe       	sbrs	r10, 0
 46e:	06 c0       	rjmp	.+12     	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
 470:	10 17       	cp	r17, r16
 472:	88 f4       	brcc	.+34     	; 0x496 <__EEPROM_REGION_LENGTH__+0x96>
 474:	04 0d       	add	r16, r4
 476:	b0 2e       	mov	r11, r16
 478:	b1 1a       	sub	r11, r17
 47a:	0e c0       	rjmp	.+28     	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
 47c:	10 17       	cp	r17, r16
 47e:	60 f4       	brcc	.+24     	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
 480:	b6 01       	movw	r22, r12
 482:	80 e2       	ldi	r24, 0x20	; 32
 484:	90 e0       	ldi	r25, 0x00	; 0
 486:	0e 94 2b 04 	call	0x856	; 0x856 <fputc>
 48a:	1f 5f       	subi	r17, 0xFF	; 255
 48c:	f7 cf       	rjmp	.-18     	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
 48e:	10 17       	cp	r17, r16
 490:	18 f4       	brcc	.+6      	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
 492:	01 1b       	sub	r16, r17
 494:	02 c0       	rjmp	.+4      	; 0x49a <__EEPROM_REGION_LENGTH__+0x9a>
 496:	b4 2c       	mov	r11, r4
 498:	00 e0       	ldi	r16, 0x00	; 0
 49a:	a4 fe       	sbrs	r10, 4
 49c:	10 c0       	rjmp	.+32     	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
 49e:	b6 01       	movw	r22, r12
 4a0:	80 e3       	ldi	r24, 0x30	; 48
 4a2:	90 e0       	ldi	r25, 0x00	; 0
 4a4:	0e 94 2b 04 	call	0x856	; 0x856 <fputc>
 4a8:	a2 fe       	sbrs	r10, 2
 4aa:	17 c0       	rjmp	.+46     	; 0x4da <__EEPROM_REGION_LENGTH__+0xda>
 4ac:	a1 fc       	sbrc	r10, 1
 4ae:	03 c0       	rjmp	.+6      	; 0x4b6 <__EEPROM_REGION_LENGTH__+0xb6>
 4b0:	88 e7       	ldi	r24, 0x78	; 120
 4b2:	90 e0       	ldi	r25, 0x00	; 0
 4b4:	02 c0       	rjmp	.+4      	; 0x4ba <__EEPROM_REGION_LENGTH__+0xba>
 4b6:	88 e5       	ldi	r24, 0x58	; 88
 4b8:	90 e0       	ldi	r25, 0x00	; 0
 4ba:	b6 01       	movw	r22, r12
 4bc:	0c c0       	rjmp	.+24     	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
 4be:	8a 2d       	mov	r24, r10
 4c0:	86 78       	andi	r24, 0x86	; 134
 4c2:	59 f0       	breq	.+22     	; 0x4da <__EEPROM_REGION_LENGTH__+0xda>
 4c4:	a1 fe       	sbrs	r10, 1
 4c6:	02 c0       	rjmp	.+4      	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
 4c8:	8b e2       	ldi	r24, 0x2B	; 43
 4ca:	01 c0       	rjmp	.+2      	; 0x4ce <__EEPROM_REGION_LENGTH__+0xce>
 4cc:	80 e2       	ldi	r24, 0x20	; 32
 4ce:	a7 fc       	sbrc	r10, 7
 4d0:	8d e2       	ldi	r24, 0x2D	; 45
 4d2:	b6 01       	movw	r22, r12
 4d4:	90 e0       	ldi	r25, 0x00	; 0
 4d6:	0e 94 2b 04 	call	0x856	; 0x856 <fputc>
 4da:	4b 14       	cp	r4, r11
 4dc:	38 f4       	brcc	.+14     	; 0x4ec <__EEPROM_REGION_LENGTH__+0xec>
 4de:	b6 01       	movw	r22, r12
 4e0:	80 e3       	ldi	r24, 0x30	; 48
 4e2:	90 e0       	ldi	r25, 0x00	; 0
 4e4:	0e 94 2b 04 	call	0x856	; 0x856 <fputc>
 4e8:	ba 94       	dec	r11
 4ea:	f7 cf       	rjmp	.-18     	; 0x4da <__EEPROM_REGION_LENGTH__+0xda>
 4ec:	4a 94       	dec	r4
 4ee:	e1 e0       	ldi	r30, 0x01	; 1
 4f0:	f0 e0       	ldi	r31, 0x00	; 0
 4f2:	ec 0f       	add	r30, r28
 4f4:	fd 1f       	adc	r31, r29
 4f6:	e4 0d       	add	r30, r4
 4f8:	f1 1d       	adc	r31, r1
 4fa:	80 81       	ld	r24, Z
 4fc:	b6 01       	movw	r22, r12
 4fe:	90 e0       	ldi	r25, 0x00	; 0
 500:	0e 94 2b 04 	call	0x856	; 0x856 <fputc>
 504:	41 10       	cpse	r4, r1
 506:	f2 cf       	rjmp	.-28     	; 0x4ec <__EEPROM_REGION_LENGTH__+0xec>
 508:	00 23       	and	r16, r16
 50a:	09 f4       	brne	.+2      	; 0x50e <__EEPROM_REGION_LENGTH__+0x10e>
 50c:	30 ce       	rjmp	.-928    	; 0x16e <vfprintf+0x5e>
 50e:	b6 01       	movw	r22, r12
 510:	80 e2       	ldi	r24, 0x20	; 32
 512:	90 e0       	ldi	r25, 0x00	; 0
 514:	0e 94 2b 04 	call	0x856	; 0x856 <fputc>
 518:	01 50       	subi	r16, 0x01	; 1
 51a:	f6 cf       	rjmp	.-20     	; 0x508 <__EEPROM_REGION_LENGTH__+0x108>
 51c:	f6 01       	movw	r30, r12
 51e:	87 81       	ldd	r24, Z+7	; 0x07
 520:	90 85       	ldd	r25, Z+8	; 0x08
 522:	02 c0       	rjmp	.+4      	; 0x528 <__EEPROM_REGION_LENGTH__+0x128>
 524:	8f ef       	ldi	r24, 0xFF	; 255
 526:	9f ef       	ldi	r25, 0xFF	; 255
 528:	62 96       	adiw	r28, 0x12	; 18
 52a:	0f b6       	in	r0, 0x3f	; 63
 52c:	f8 94       	cli
 52e:	de bf       	out	0x3e, r29	; 62
 530:	0f be       	out	0x3f, r0	; 63
 532:	cd bf       	out	0x3d, r28	; 61
 534:	df 91       	pop	r29
 536:	cf 91       	pop	r28
 538:	1f 91       	pop	r17
 53a:	0f 91       	pop	r16
 53c:	ff 90       	pop	r15
 53e:	ef 90       	pop	r14
 540:	df 90       	pop	r13
 542:	cf 90       	pop	r12
 544:	bf 90       	pop	r11
 546:	af 90       	pop	r10
 548:	9f 90       	pop	r9
 54a:	8f 90       	pop	r8
 54c:	7f 90       	pop	r7
 54e:	6f 90       	pop	r6
 550:	4f 90       	pop	r4
 552:	3f 90       	pop	r3
 554:	2f 90       	pop	r2
 556:	08 95       	ret

Disassembly of section .text.avrlibc:

000009e4 <strnlen>:
 9e4:	cf 92       	push	r12
 9e6:	df 92       	push	r13
 9e8:	ef 92       	push	r14
 9ea:	6b 01       	movw	r12, r22
 9ec:	e8 2e       	mov	r14, r24
 9ee:	a8 2f       	mov	r26, r24
 9f0:	cb 01       	movw	r24, r22
 9f2:	41 15       	cp	r20, r1
 9f4:	51 05       	cpc	r21, r1
 9f6:	31 f4       	brne	.+12     	; 0xa04 <strnlen+0x20>
 9f8:	8c 19       	sub	r24, r12
 9fa:	9d 09       	sbc	r25, r13
 9fc:	ef 90       	pop	r14
 9fe:	df 90       	pop	r13
 a00:	cf 90       	pop	r12
 a02:	08 95       	ret
 a04:	fc 01       	movw	r30, r24
 a06:	24 91       	lpm	r18, Z
 a08:	a7 fd       	sbrc	r26, 7
 a0a:	20 81       	ld	r18, Z
 a0c:	22 23       	and	r18, r18
 a0e:	a1 f3       	breq	.-24     	; 0x9f8 <strnlen+0x14>
 a10:	01 96       	adiw	r24, 0x01	; 1
 a12:	a1 1d       	adc	r26, r1
 a14:	41 50       	subi	r20, 0x01	; 1
 a16:	51 09       	sbc	r21, r1
 a18:	ec cf       	rjmp	.-40     	; 0x9f2 <strnlen+0xe>

Disassembly of section .text.avrlibc:

00000856 <fputc>:
 856:	0f 93       	push	r16
 858:	1f 93       	push	r17
 85a:	cf 93       	push	r28
 85c:	df 93       	push	r29
 85e:	fb 01       	movw	r30, r22
 860:	24 81       	ldd	r18, Z+4	; 0x04
 862:	21 fd       	sbrc	r18, 1
 864:	03 c0       	rjmp	.+6      	; 0x86c <fputc+0x16>
 866:	8f ef       	ldi	r24, 0xFF	; 255
 868:	9f ef       	ldi	r25, 0xFF	; 255
 86a:	2c c0       	rjmp	.+88     	; 0x8c4 <fputc+0x6e>
 86c:	22 ff       	sbrs	r18, 2
 86e:	16 c0       	rjmp	.+44     	; 0x89c <fputc+0x46>
 870:	47 81       	ldd	r20, Z+7	; 0x07
 872:	50 85       	ldd	r21, Z+8	; 0x08
 874:	25 81       	ldd	r18, Z+5	; 0x05
 876:	36 81       	ldd	r19, Z+6	; 0x06
 878:	42 17       	cp	r20, r18
 87a:	53 07       	cpc	r21, r19
 87c:	44 f4       	brge	.+16     	; 0x88e <fputc+0x38>
 87e:	a0 81       	ld	r26, Z
 880:	b1 81       	ldd	r27, Z+1	; 0x01
 882:	9d 01       	movw	r18, r26
 884:	2f 5f       	subi	r18, 0xFF	; 255
 886:	3f 4f       	sbci	r19, 0xFF	; 255
 888:	31 83       	std	Z+1, r19	; 0x01
 88a:	20 83       	st	Z, r18
 88c:	8c 93       	st	X, r24
 88e:	27 81       	ldd	r18, Z+7	; 0x07
 890:	30 85       	ldd	r19, Z+8	; 0x08
 892:	2f 5f       	subi	r18, 0xFF	; 255
 894:	3f 4f       	sbci	r19, 0xFF	; 255
 896:	30 87       	std	Z+8, r19	; 0x08
 898:	27 83       	std	Z+7, r18	; 0x07
 89a:	14 c0       	rjmp	.+40     	; 0x8c4 <fputc+0x6e>
 89c:	8b 01       	movw	r16, r22
 89e:	ec 01       	movw	r28, r24
 8a0:	fb 01       	movw	r30, r22
 8a2:	01 84       	ldd	r0, Z+9	; 0x09
 8a4:	f2 85       	ldd	r31, Z+10	; 0x0a
 8a6:	e0 2d       	mov	r30, r0
 8a8:	09 95       	icall
 8aa:	89 2b       	or	r24, r25
 8ac:	e1 f6       	brne	.-72     	; 0x866 <fputc+0x10>
 8ae:	d8 01       	movw	r26, r16
 8b0:	17 96       	adiw	r26, 0x07	; 7
 8b2:	8d 91       	ld	r24, X+
 8b4:	9c 91       	ld	r25, X
 8b6:	18 97       	sbiw	r26, 0x08	; 8
 8b8:	01 96       	adiw	r24, 0x01	; 1
 8ba:	18 96       	adiw	r26, 0x08	; 8
 8bc:	9c 93       	st	X, r25
 8be:	8e 93       	st	-X, r24
 8c0:	17 97       	sbiw	r26, 0x07	; 7
 8c2:	ce 01       	movw	r24, r28
 8c4:	df 91       	pop	r29
 8c6:	cf 91       	pop	r28
 8c8:	1f 91       	pop	r17
 8ca:	0f 91       	pop	r16
 8cc:	08 95       	ret

Disassembly of section .text.avrlibc:

0000079a <__ultoa_invert>:
 79a:	fa 01       	movw	r30, r20
 79c:	aa 27       	eor	r26, r26
 79e:	28 30       	cpi	r18, 0x08	; 8
 7a0:	51 f1       	breq	.+84     	; 0x7f6 <__ultoa_invert+0x5c>
 7a2:	20 31       	cpi	r18, 0x10	; 16
 7a4:	81 f1       	breq	.+96     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 7a6:	e8 94       	clt
 7a8:	6f 93       	push	r22
 7aa:	6e 7f       	andi	r22, 0xFE	; 254
 7ac:	6e 5f       	subi	r22, 0xFE	; 254
 7ae:	7f 4f       	sbci	r23, 0xFF	; 255
 7b0:	8f 4f       	sbci	r24, 0xFF	; 255
 7b2:	9f 4f       	sbci	r25, 0xFF	; 255
 7b4:	af 4f       	sbci	r26, 0xFF	; 255
 7b6:	b1 e0       	ldi	r27, 0x01	; 1
 7b8:	3e d0       	rcall	.+124    	; 0x836 <__DATA_REGION_LENGTH__+0x36>
 7ba:	b4 e0       	ldi	r27, 0x04	; 4
 7bc:	3c d0       	rcall	.+120    	; 0x836 <__DATA_REGION_LENGTH__+0x36>
 7be:	67 0f       	add	r22, r23
 7c0:	78 1f       	adc	r23, r24
 7c2:	89 1f       	adc	r24, r25
 7c4:	9a 1f       	adc	r25, r26
 7c6:	a1 1d       	adc	r26, r1
 7c8:	68 0f       	add	r22, r24
 7ca:	79 1f       	adc	r23, r25
 7cc:	8a 1f       	adc	r24, r26
 7ce:	91 1d       	adc	r25, r1
 7d0:	a1 1d       	adc	r26, r1
 7d2:	6a 0f       	add	r22, r26
 7d4:	71 1d       	adc	r23, r1
 7d6:	81 1d       	adc	r24, r1
 7d8:	91 1d       	adc	r25, r1
 7da:	a1 1d       	adc	r26, r1
 7dc:	20 d0       	rcall	.+64     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
 7de:	09 f4       	brne	.+2      	; 0x7e2 <__ultoa_invert+0x48>
 7e0:	68 94       	set
 7e2:	3f 91       	pop	r19
 7e4:	2a e0       	ldi	r18, 0x0A	; 10
 7e6:	26 9f       	mul	r18, r22
 7e8:	11 24       	eor	r1, r1
 7ea:	30 19       	sub	r19, r0
 7ec:	30 5d       	subi	r19, 0xD0	; 208
 7ee:	31 93       	st	Z+, r19
 7f0:	de f6       	brtc	.-74     	; 0x7a8 <__ultoa_invert+0xe>
 7f2:	cf 01       	movw	r24, r30
 7f4:	08 95       	ret
 7f6:	46 2f       	mov	r20, r22
 7f8:	47 70       	andi	r20, 0x07	; 7
 7fa:	40 5d       	subi	r20, 0xD0	; 208
 7fc:	41 93       	st	Z+, r20
 7fe:	b3 e0       	ldi	r27, 0x03	; 3
 800:	0f d0       	rcall	.+30     	; 0x820 <__DATA_REGION_LENGTH__+0x20>
 802:	c9 f7       	brne	.-14     	; 0x7f6 <__ultoa_invert+0x5c>
 804:	f6 cf       	rjmp	.-20     	; 0x7f2 <__ultoa_invert+0x58>
 806:	46 2f       	mov	r20, r22
 808:	4f 70       	andi	r20, 0x0F	; 15
 80a:	40 5d       	subi	r20, 0xD0	; 208
 80c:	4a 33       	cpi	r20, 0x3A	; 58
 80e:	18 f0       	brcs	.+6      	; 0x816 <__DATA_REGION_LENGTH__+0x16>
 810:	49 5d       	subi	r20, 0xD9	; 217
 812:	31 fd       	sbrc	r19, 1
 814:	40 52       	subi	r20, 0x20	; 32
 816:	41 93       	st	Z+, r20
 818:	02 d0       	rcall	.+4      	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
 81a:	a9 f7       	brne	.-22     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 81c:	ea cf       	rjmp	.-44     	; 0x7f2 <__ultoa_invert+0x58>
 81e:	b4 e0       	ldi	r27, 0x04	; 4
 820:	a6 95       	lsr	r26
 822:	97 95       	ror	r25
 824:	87 95       	ror	r24
 826:	77 95       	ror	r23
 828:	67 95       	ror	r22
 82a:	ba 95       	dec	r27
 82c:	c9 f7       	brne	.-14     	; 0x820 <__DATA_REGION_LENGTH__+0x20>
 82e:	00 97       	sbiw	r24, 0x00	; 0
 830:	61 05       	cpc	r22, r1
 832:	71 05       	cpc	r23, r1
 834:	08 95       	ret
 836:	9b 01       	movw	r18, r22
 838:	ac 01       	movw	r20, r24
 83a:	0a 2e       	mov	r0, r26
 83c:	06 94       	lsr	r0
 83e:	57 95       	ror	r21
 840:	47 95       	ror	r20
 842:	37 95       	ror	r19
 844:	27 95       	ror	r18
 846:	ba 95       	dec	r27
 848:	c9 f7       	brne	.-14     	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
 84a:	62 0f       	add	r22, r18
 84c:	73 1f       	adc	r23, r19
 84e:	84 1f       	adc	r24, r20
 850:	95 1f       	adc	r25, r21
 852:	a0 1d       	adc	r26, r0
 854:	08 95       	ret

Disassembly of section .text.libgcc.prologue:

000009ac <__prologue_saves__>:
 9ac:	2f 92       	push	r2
 9ae:	3f 92       	push	r3
 9b0:	4f 92       	push	r4
 9b2:	5f 92       	push	r5
 9b4:	6f 92       	push	r6
 9b6:	7f 92       	push	r7
 9b8:	8f 92       	push	r8
 9ba:	9f 92       	push	r9
 9bc:	af 92       	push	r10
 9be:	bf 92       	push	r11
 9c0:	cf 92       	push	r12
 9c2:	df 92       	push	r13
 9c4:	ef 92       	push	r14
 9c6:	ff 92       	push	r15
 9c8:	0f 93       	push	r16
 9ca:	1f 93       	push	r17
 9cc:	cf 93       	push	r28
 9ce:	df 93       	push	r29
 9d0:	cd b7       	in	r28, 0x3d	; 61
 9d2:	de b7       	in	r29, 0x3e	; 62
 9d4:	ca 1b       	sub	r28, r26
 9d6:	db 0b       	sbc	r29, r27
 9d8:	0f b6       	in	r0, 0x3f	; 63
 9da:	f8 94       	cli
 9dc:	de bf       	out	0x3e, r29	; 62
 9de:	0f be       	out	0x3f, r0	; 63
 9e0:	cd bf       	out	0x3d, r28	; 61
 9e2:	09 94       	ijmp

Disassembly of section .text.libgcc.prologue:

00000a1a <__epilogue_restores__>:
 a1a:	2a 88       	ldd	r2, Y+18	; 0x12
 a1c:	39 88       	ldd	r3, Y+17	; 0x11
 a1e:	48 88       	ldd	r4, Y+16	; 0x10
 a20:	5f 84       	ldd	r5, Y+15	; 0x0f
 a22:	6e 84       	ldd	r6, Y+14	; 0x0e
 a24:	7d 84       	ldd	r7, Y+13	; 0x0d
 a26:	8c 84       	ldd	r8, Y+12	; 0x0c
 a28:	9b 84       	ldd	r9, Y+11	; 0x0b
 a2a:	aa 84       	ldd	r10, Y+10	; 0x0a
 a2c:	b9 84       	ldd	r11, Y+9	; 0x09
 a2e:	c8 84       	ldd	r12, Y+8	; 0x08
 a30:	df 80       	ldd	r13, Y+7	; 0x07
 a32:	ee 80       	ldd	r14, Y+6	; 0x06
 a34:	fd 80       	ldd	r15, Y+5	; 0x05
 a36:	0c 81       	ldd	r16, Y+4	; 0x04
 a38:	1b 81       	ldd	r17, Y+3	; 0x03
 a3a:	aa 81       	ldd	r26, Y+2	; 0x02
 a3c:	b9 81       	ldd	r27, Y+1	; 0x01
 a3e:	ce 0f       	add	r28, r30
 a40:	d1 1d       	adc	r29, r1
 a42:	0f b6       	in	r0, 0x3f	; 63
 a44:	f8 94       	cli
 a46:	de bf       	out	0x3e, r29	; 62
 a48:	0f be       	out	0x3f, r0	; 63
 a4a:	cd bf       	out	0x3d, r28	; 61
 a4c:	ed 01       	movw	r28, r26
 a4e:	08 95       	ret
